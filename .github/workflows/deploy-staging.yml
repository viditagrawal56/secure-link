name: Deploy to Staging

on:
  push:
    branches: [develop]
    paths:
      - 'drizzle/**'
      - 'public/**'
      - 'src/**'
      - 'worker/**'
      - 'index.html'
      - 'wrangler.jsonc'
      - 'package.json'
      - 'package-lock.json'
      - 'vite.config.ts'
      - 'tsconfig*.json'
      - 'worker-configuration.d.ts'
  workflow_dispatch: 

concurrency:
  group: staging-deployment
  cancel-in-progress: false

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
          
      - name: Deploy to staging
        run: npm run deploy:staging
        env:
          CLOUDFLARE_API_TOKEN : ${{ secrets.CLOUDFLARE_API_TOKEN  }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  notify-staging-success:
    name: Notify Staging Success
    needs: deploy-staging
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Notify success
        run: |
          echo "Staging deployment successful!"
          echo "URL: https://secure-link-staging.secure-link.workers.dev"
    
    